0- important: make sure to edit the paths of the txt files in your code.

1- Add store item: when the button "Add store item" is clicked:
  1.1- Open new window (i.e: any_variable_name = Flammarion::Engraving.new)
  1.2- Add two buttons inside the window ( Add Book - Add Magazine) as in Marwan's project https://www.youtube.com/watch?v=hLpzrXDzxZ0
  1.3- When the button "Add Book" is clicked: open new window (step 1.1) and add 5 text boxes for title, price, author name, number of pages, isbn.
    1.3.1- Add "Add Book" button, write the code needed for the button to work successfully (i.e: append the book's information in the Books.txt file.
            splitted by commas). The new line character "\n" also must be added to the information of the book, 
            i.e: File.write("some_fil_path/Books.txt", item_info + "\n", mode: 'a') please make sure that the information is written in the file correctly.
    1.3.2- If the user clicked "Add Book" many times for the same book, the program should add the book only once. 
    1.3.3- Finally show the message "Item added successfully".
  1.4- When the button "Add Magazine" is clicked: apply same steps(1.3 => 1.3.3) for the information of the magazine, and the file Magazines.txt
  
2- List of all items: make sure that the items are listed in readable and nice format. 
  2.1- When the button "List of all items" is clicked all the new added items should be shown, and all the deleted items should not be listed. 
  2.3- Additional: When the button "List of all items" is clicked more than once it should not show the items many times.

3- List books within certain range - (Dina - in progress).

4- Search magazine by date - (Dina - in progresss).

5- Search magazine by publisher.

6- Delete an item. (Abdelrhman)

7- Additional: when the button "List most expensive items" is clicked more than once it should not show the items many times.

8- Additional: Write README file for this repo.

Notes: 
 - To Open new window: any_window_name = Flammarion::Engraving.new, please remember to add: any_window_name.wait_until_closed
 - The code of drop down menu: f.dropdown([1,2,3]){|h_msg| p h_msg['text']}
 - Any Additional features might be done after we finish all the project. 
 - Flammarion repo: https://github.com/zach-capalbo/flammarion
 - Please refer to Marwan's video: https://www.youtube.com/watch?v=hLpzrXDzxZ0
 - Marwan's BookStore repo: https://github.com/MarwanTukhta/OOP-Ruby-BookStore

Good luck :) 
